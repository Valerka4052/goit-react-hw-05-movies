{"version":3,"file":"static/js/438.43571867.chunk.js","mappings":"kQAEaA,EAAOC,EAAAA,EAAAA,GAAH,yCAGJC,EAAYD,EAAAA,EAAAA,GAAH,oFAKTE,EAAOF,EAAAA,EAAAA,GAAH,iMASJG,EAAQH,EAAAA,EAAAA,IAAH,0BAGLI,EAAgBJ,EAAAA,EAAAA,IAAH,mDAIbK,EAAOL,EAAAA,EAAAA,EAAH,8FAMJM,EAAWN,EAAAA,EAAAA,EAAH,0EAKRO,GAAOP,EAAAA,EAAAA,GAAOQ,EAAAA,GAAPR,CAAH,qGAMJS,GAAUT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,sJAUPW,EAAYX,EAAAA,EAAAA,IAAH,2HAOTY,EAAgBZ,EAAAA,EAAAA,IAAH,4C,SCvDnB,SAASa,EAAT,GAAoC,IAAD,IAAhBC,EAAgB,EAAhBA,aAChBC,GAAWC,EAAAA,EAAAA,MACjB,GAA0CC,EAAAA,EAAAA,UAAS,MAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAeC,EAAAA,EAAAA,QAAM,oBAACN,EAASO,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAC5CC,EAA8EV,EAA9EU,OAAQC,EAAsEX,EAAtEW,eAAgBC,EAAsDZ,EAAtDY,aAAcC,EAAwCb,EAAxCa,SAAUC,EAA8Bd,EAA9Bc,YAAaC,EAAiBf,EAAjBe,aAC/DC,EAAQC,KAAKC,MAAqB,GAAfH,GAC7BI,QAAQC,IAAIpB,IACRqB,EAAAA,EAAAA,YAAU,WACNhB,EAAiBC,EAAagB,QACjC,GAAE,IAEH,IAAMC,EAAc,IAAIC,KAAKZ,GAAca,cAE3C,OACI,iCACI,SAAC3B,EAAD,WACI,SAACL,EAAD,CAAMiC,GAAItB,EAAV,wBAEJ,UAACP,EAAD,YACI,SAACR,EAAD,CAAOsC,IAAG,yCAAoCb,GAAec,IAAI,MACjE,UAACtC,EAAD,YACI,UAACE,EAAD,WAAWmB,EAAX,KAA6BY,EAA7B,QACA,UAAChC,EAAD,YAAM,6CAA8ByB,EAApC,QACA,SAACzB,EAAD,WAAM,4CACN,SAACA,EAAD,UAAOsB,KACP,SAACtB,EAAD,WAAM,2CACN,SAACN,EAAD,UACKyB,EAAOmB,KAAI,YAAmB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KAAa,OAAO,SAAC5C,EAAD,UAAqB4C,GAALD,EAAwB,OAEnF,4BACI,SAACvC,EAAD,WAAM,yDACN,UAACN,EAAD,YACI,SAACG,EAAD,WAAM,SAACO,EAAD,CAAS+B,GAAI,OAAb,qBACN,SAACtC,EAAD,WAAM,SAACO,EAAD,CAAS+B,GAAI,UAAb,oCAKtB,SAAC,KAAD,MAGX,C,sBCpBD,MAnBC,WACG,IAAQM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwC7B,EAAAA,EAAAA,UAAS,MAAjD,eAAOH,EAAP,KAAqBkC,EAArB,KACA,GAA8B/B,EAAAA,EAAAA,WAAS,GAAvC,eAAOgC,EAAP,KAAgBC,EAAhB,KAUA,OARAf,EAAAA,EAAAA,YAAU,WACNe,GAAW,IACXC,EAAAA,EAAAA,IAAaL,GAASM,MAAK,SAAAC,GACvBL,EAAgBK,GAChBH,GAAW,EACd,GACJ,GAAE,CAACJ,IAEChC,EAGDmC,GAAU,SAACK,EAAA,EAAD,KAAa,SAACzC,EAAD,CAASC,aAAcA,IAHxB,IAK7B,C","sources":["components/Details/Details1.styled.js","components/Details/Details.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\nimport { NavLink as LinkNav ,Link as BackLink } from \"react-router-dom\";\nexport const List = styled.ul`\n display: flex;\n`\nexport const GenreItem = styled.li`\nlist-style: none;\nmargin-bottom:15px;\nmargin-right:30px;\n`\nexport const Item = styled.li`\nlist-style: none;\nmargin-bottom:15px;\nmargin-right:40px;\n     transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n&:hover {\n  transform: scale(1.5);\n    };\n`\nexport const Image = styled.img`\n\n`\nexport const TextContainer = styled.div`\nwidth:50%;\npadding:20px;\n`\nexport const Text = styled.p`\ncolor: black;\nfont-size:16px;\nfont-weight:400;\nfont-style:italic;\n`\nexport const MainText = styled.p`\ncolor: black;\nfont-size:30px;\nfont-weight:700;\n`\nexport const Link = styled(BackLink)`\ntext-decoration:none;\nfont-size:20px;\nfont-weight:700;\ncolor: chocolate;\n`\nexport const NavLink = styled(LinkNav)`\ntext-decoration:none;\ncolor: blueviolet;\nfont-size:20px;\nfont-weight:400;\n&.active{\n  color:red;\n  font-weight:500;\n}\n`;\nexport const Container = styled.div`\ndisplay:flex;\nflex-wrap:wrap;\njustify-content:space-around;\nalign-items:center;\npadding:30px;\n`\nexport const LinkContainer = styled.div`\npadding-left:40px;\n`","import { useEffect, useRef, useState } from \"react\";\nimport { Outlet,useLocation,} from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { List, Item, Image, TextContainer, Text, MainText, Container, GenreItem, LinkContainer, NavLink, Link } from './Details1.styled';\n\nexport function Details({ detailsMovie }) {\n    const location = useLocation();\n    const [locationState, SetLocationState] = useState(null);\n    const backLinkHref = useRef(location.state?.from ?? \"/\");\n    const { genres, original_title, release_date, overview, poster_path, vote_average } = detailsMovie;\n    const score = Math.round(vote_average * 10);\nconsole.log(detailsMovie)\n    useEffect(() => {\n        SetLocationState(backLinkHref.current);\n    }, []);\n\n    const releaseDate = new Date(release_date).getFullYear();\n    \n    return (\n        <>\n            <LinkContainer>\n                <Link to={locationState}>Go back</Link>\n            </LinkContainer>\n            <Container>\n                <Image src={`https://image.tmdb.org/t/p/w500${poster_path}`} alt=\"\" />\n                <TextContainer>\n                    <MainText>{original_title} ({releaseDate})</MainText>\n                    <Text><strong>User score: </strong>{score}%</Text>\n                    <Text><strong>Owervew:</strong></Text>\n                    <Text>{overview}</Text>\n                    <Text><strong>Genres:</strong></Text>\n                    <List>\n                        {genres.map(({ id, name }) => { return <GenreItem key={id}>{name}</GenreItem> })}\n                    </List>\n                    <div>\n                        <Text><strong>Additonal information</strong></Text>\n                        <List>\n                            <Item><NavLink to={'cast'}>Cast</NavLink></Item>\n                            <Item><NavLink to={'reviews'}>Reviews</NavLink></Item>\n                        </List>\n                    </div>\n                </TextContainer>\n            </Container>\n            <Outlet />\n        </>\n    );\n};\nDetails.propTypes = {\n    detailsMovie: PropTypes.shape({\n        original_title: PropTypes.string,\n        release_date: PropTypes.string,\n        overview: PropTypes.string,\n        poster_path: PropTypes.string,\n        vote_average: PropTypes.number,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({\n                id: PropTypes.number.isRequired,\n                name: PropTypes.string,\n            }).isRequired,\n        ).isRequired,\n    }).isRequired,\n};\n","import { Details } from \"components/Details/Details\";\nimport { useEffect, useState } from \"react\";\nimport {useParams,} from \"react-router-dom\";\nimport { movieDetails } from \"../api\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\n function MovieDetails() {\n    const { movieId } = useParams();\n    const [detailsMovie, setDetailsMovie] = useState(null);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true);\n        movieDetails(movieId).then(movie => {\n            setDetailsMovie(movie);\n            setLoading(false);\n        })\n    }, [movieId]);\n    \n    if (!detailsMovie) return null;\n   \n    return (\n        loading ? <Loader /> : <Details detailsMovie={detailsMovie} />\n    );\n};\nexport default MovieDetails"],"names":["List","styled","GenreItem","Item","Image","TextContainer","Text","MainText","Link","BackLink","NavLink","LinkNav","Container","LinkContainer","Details","detailsMovie","location","useLocation","useState","locationState","SetLocationState","backLinkHref","useRef","state","from","genres","original_title","release_date","overview","poster_path","vote_average","score","Math","round","console","log","useEffect","current","releaseDate","Date","getFullYear","to","src","alt","map","id","name","movieId","useParams","setDetailsMovie","loading","setLoading","movieDetails","then","movie","Loader"],"sourceRoot":""}